[{"C:\\Users\\guz08\\OneDrive\\Рабочий стол\\dev ed\\React Music\\music-player\\src\\index.js":"1","C:\\Users\\guz08\\OneDrive\\Рабочий стол\\dev ed\\React Music\\music-player\\src\\reportWebVitals.js":"2","C:\\Users\\guz08\\OneDrive\\Рабочий стол\\dev ed\\React Music\\music-player\\src\\App.js":"3","C:\\Users\\guz08\\OneDrive\\Рабочий стол\\dev ed\\React Music\\music-player\\src\\data.js":"4","C:\\Users\\guz08\\OneDrive\\Рабочий стол\\dev ed\\React Music\\music-player\\src\\components\\Song.js":"5","C:\\Users\\guz08\\OneDrive\\Рабочий стол\\dev ed\\React Music\\music-player\\src\\components\\library.js":"6","C:\\Users\\guz08\\OneDrive\\Рабочий стол\\dev ed\\React Music\\music-player\\src\\components\\nav.js":"7","C:\\Users\\guz08\\OneDrive\\Рабочий стол\\dev ed\\React Music\\music-player\\src\\components\\Player.js":"8","C:\\Users\\guz08\\OneDrive\\Рабочий стол\\dev ed\\React Music\\music-player\\src\\components\\librarySong.js":"9"},{"size":433,"mtime":1609531099782,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":2691,"mtime":1611598328416,"results":"13","hashOfConfig":"11"},{"size":11693,"mtime":1610525917450,"results":"14","hashOfConfig":"11"},{"size":398,"mtime":1610526900710,"results":"15","hashOfConfig":"11"},{"size":620,"mtime":1609610677831,"results":"16","hashOfConfig":"11"},{"size":307,"mtime":1609610509137,"results":"17","hashOfConfig":"11"},{"size":3959,"mtime":1609715573953,"results":"18","hashOfConfig":"11"},{"size":1124,"mtime":1609619078149,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"12jqrnj",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"C:\\Users\\guz08\\OneDrive\\Рабочий стол\\dev ed\\React Music\\music-player\\src\\index.js",[],["41","42"],"C:\\Users\\guz08\\OneDrive\\Рабочий стол\\dev ed\\React Music\\music-player\\src\\reportWebVitals.js",[],"C:\\Users\\guz08\\OneDrive\\Рабочий стол\\dev ed\\React Music\\music-player\\src\\App.js",["43"],"import React, {useState, useEffect, useRef} from 'react';\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport chillHop from './data';\nimport Library from './components/library';\nimport Nav from './components/nav';\nimport './styles/app.css';\nimport axios from 'axios'\n\n\n\n\n\n function App() {\n  const audioRef = useRef(null)\n  const [songs, setSongs] = useState([]);\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n        currentTime: 0,\n        duration: 0,\n        volume: 0.15,\n        open: false,\n        animationPercentage: 0 \n    });\n  const [libraryStatus, setLibraryStatus] = useState(false)\n\n\n  const timeUpdateHandler = (e) =>{\n        const current = e.target.currentTime;\n        const duration = e.target.duration;\n\n        const animationPercentage = ((current / duration) * 100 ).toFixed(2);\n\n\n        \n\n        setSongInfo({...songInfo, currentTime: current, duration, animationPercentage: animationPercentage})\n    }\n\n    const songEnded = async()=>{\n      let currentIndex = songs.findIndex(song => song.id === currentSong.id)\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length])\n      if(isPlaying) audioRef.current.play()\n    }\n\n\n\n  useEffect(() => {\n    axios('https://react-music-player-dc6f6-default-rtdb.firebaseio.com/songs.json')\n      .then(res => {\n        setSongs(Object.values(res.data)[0])\n        setCurrentSong(Object.values(res.data)[0][0])\n      })\n      .catch((e) => console.log(e))\n  }, [])\n\n\n  return(\n    \n      <div className={`App ${libraryStatus ? 'library-active' : ''} `}>\n        {songs.length !== 0 && (\n          <>\n            <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus}/>\n            <Song currentSong={!currentSong ? songs[0] : currentSong} isPlaying={isPlaying} libraryStatus={libraryStatus}/>\n            <Player libraryStatus={libraryStatus} setSongs={setSongs} setCurrentSong={setCurrentSong} songs={songs} currentSong={!currentSong ? songs[0] : currentSong} setIsPlaying={setIsPlaying} isPlaying={isPlaying} songInfo={songInfo} setSongInfo={setSongInfo} audioRef={audioRef}/>\n            <Library songs={songs} setCurrentSong={setCurrentSong} audioRef={audioRef} songInfo={songInfo} isPlaying={isPlaying} setIsPlaying={setIsPlaying} setSongs={setSongs} libraryStatus={libraryStatus}/>\n            <audio onEnded={songEnded} onTimeUpdate={timeUpdateHandler} onLoadedMetadata={timeUpdateHandler} ref={audioRef} src={!currentSong ? songs[0].audio : currentSong.audio}></audio>\n          </>\n        )}\n\n      </div>\n    \n  );\n}\n\nexport default App;\n","C:\\Users\\guz08\\OneDrive\\Рабочий стол\\dev ed\\React Music\\music-player\\src\\data.js",[],"C:\\Users\\guz08\\OneDrive\\Рабочий стол\\dev ed\\React Music\\music-player\\src\\components\\Song.js",[],"C:\\Users\\guz08\\OneDrive\\Рабочий стол\\dev ed\\React Music\\music-player\\src\\components\\library.js",[],"C:\\Users\\guz08\\OneDrive\\Рабочий стол\\dev ed\\React Music\\music-player\\src\\components\\nav.js",[],"C:\\Users\\guz08\\OneDrive\\Рабочий стол\\dev ed\\React Music\\music-player\\src\\components\\Player.js",[],"C:\\Users\\guz08\\OneDrive\\Рабочий стол\\dev ed\\React Music\\music-player\\src\\components\\librarySong.js",["44"],"import React, {useEffect} from 'react';\r\n\r\nconst LibrarySong = ({song, songs, setCurrentSong, audioRef, songInfo, isPlaying, setSongs}) =>{\r\n    const {cover, name, artist, id} = song\r\n\r\n    const songSelectHandler = async ()=>{\r\n       await setCurrentSong(song);\r\n\r\n        const newSongs = songs.map(song =>{\r\n            if(song.id === id){\r\n                return{\r\n                    ...song, active: true\r\n                }\r\n            }else{\r\n                return{\r\n                    ...song, active: false\r\n                }\r\n            }\r\n        })\r\n        setSongs(newSongs)\r\n\r\n        if(isPlaying) audioRef.current.play()\r\n    }\r\n\r\n    useEffect(() =>{\r\n        audioRef.current.volume = 0.07;\r\n        songInfo.volume = 0.07;\r\n    }, [songs])\r\n \r\n    return(\r\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected' : ''}`}>\r\n            <img src={cover} alt='arr of song'></img>\r\n            <div className=\"song-desc\">\r\n                <h3>{name}</h3>\r\n                <h4>{artist}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LibrarySong",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":4,"column":8,"nodeType":"51","messageId":"52","endLine":4,"endColumn":16},{"ruleId":"53","severity":1,"message":"54","line":28,"column":8,"nodeType":"55","endLine":28,"endColumn":15,"suggestions":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'chillHop' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'audioRef' and 'songInfo'. Either include them or remove the dependency array.","ArrayExpression",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [audioRef, songInfo, songs]",{"range":"62","text":"63"},[757,764],"[audioRef, songInfo, songs]"]